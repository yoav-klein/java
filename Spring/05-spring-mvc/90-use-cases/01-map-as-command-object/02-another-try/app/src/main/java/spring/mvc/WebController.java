/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package spring.mvc;

import java.beans.PropertyEditorSupport;
import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;


import org.springframework.web.bind.WebDataBinder;

import org.springframework.validation.BindingResult;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
// import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.beans.factory.annotation.Autowired;

@Controller
public class WebController {

    @Autowired
    ProductService productService;

    private ProductCategoryDto init() {
        ProductCategoryDto dto = new ProductCategoryDto();
        List<ProductCategory> list = dto.getProductCategories();
        for(Category category : Category.values()) {
            ProductCategory pc = new ProductCategory();
            pc.setCategory(category);
            list.add(pc);
        }

        return dto;
    }

    @RequestMapping("/")
    public String home(Model model) {

        List<Product> allProducts = productService.getAllProducts();
        ProductCategoryDto productCategoryDto = init();
        List<ProductCategory> list = productCategoryDto.getProductCategories();
        for(Product p : allProducts) {
            for(ProductCategory pc : list) {
                if(pc.getCategory() == p.getCategory()) {
                    pc.getProducts().add(p);
                }
            }
        }

        model.addAttribute("productCategoryDto", productCategoryDto);
        
        ProductQuantityDto productQuantityDto = new ProductQuantityDto();
        model.addAttribute("productQuantityDto", productQuantityDto);

        return "index"; 
    }

    @PostMapping("/update")
    public String update(@ModelAttribute ProductQuantityDto productQuantityDto, BindingResult result) {
        if(result.hasErrors()) {
            System.out.println("ERRORRS");
            return "index";
        }

        List<List<ProductQuantity>> list = productQuantityDto.getProductQuantities();
        for(List<ProductQuantity> sublist : list) {
            for(ProductQuantity pc : sublist) {
                System.out.println("productId: " + pc.getProductId() + ", quantity: " + pc.getQuantity());
            }
        }

        return "redirect:/";
    }


}