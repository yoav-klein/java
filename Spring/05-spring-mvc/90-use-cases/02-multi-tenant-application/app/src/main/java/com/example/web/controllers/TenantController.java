/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example.web.controllers;

import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.User;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.beans.factory.annotation.Autowired;

import com.example.business.exception.UserAlreadyInTenantException;
import com.example.business.service.TenantService;

import com.example.helpers.Constants;

@Controller
@RequestMapping("/tenant")
public class TenantController {
    @Autowired
    TenantService tenantService;


    @GetMapping("/create")
    public String createTenantForm() {
        return "new-tenant-form";
    }

    @PostMapping("/create")
    public String createTenant(@AuthenticationPrincipal User user, @RequestParam("name") String tenantName) {
        tenantService.createTenant(tenantName, user.getUsername());

        return "redirect:/";
    }

    @GetMapping("/join")
    public String joinTenantForm() {
        return "join-tenant-form";
    }

    @PostMapping("/join")
    public String joinTenant(@AuthenticationPrincipal User user, @RequestParam("id") String id) {

        try {
            tenantService.joinToTenant(id, user.getUsername());
        } catch(UserAlreadyInTenantException e) {
            return "user-already-in-tenant";
        }

        return "redirect:/";
    }

    @GetMapping("/connect") 
    public String connectToTenant(@AuthenticationPrincipal User user, 
        @RequestParam("tenantId") String tenantId, 
        HttpServletResponse response) {

        if (tenantService.isUserPartOfTenant(user.getUsername(), tenantId)) {
            System.out.println("SETTING COOKIE");
            Cookie tenantCookie = new Cookie(Constants.TENANT_COOKIE_NAME, tenantId);
            tenantCookie.setPath("/");
            response.addCookie(tenantCookie);
        } else {
            System.out.println("NOT GOOD");
            // return 403
        }

        return "redirect:/home";
    }
   
}