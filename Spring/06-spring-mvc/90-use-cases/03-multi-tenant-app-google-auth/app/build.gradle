/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */



plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'war'
    // id "org.gretty" version "4.1.4"
    // id("online.colaba.ssh") version "1.9.6"
}



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}


dependencies {

    implementation 'org.apache.tomcat:tomcat-servlet-api:10.1.24'
    implementation group: 'org.thymeleaf', name: 'thymeleaf-spring6', version: '3.1.2.RELEASE'
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation(platform("org.springframework.security:spring-security-bom:6.5.0"))
    implementation 'org.springframework:spring-webmvc:6.1.1'
    implementation group: 'org.springframework.security', name: 'spring-security-web'
    implementation group: 'org.springframework.security', name: 'spring-security-core'
    implementation group: 'org.springframework.security', name: 'spring-security-config'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose'
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '6.1.11'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.2'

    // TESTING
    
    // TestNG for testing dude
    testImplementation libs.testng
    
    // Spring tests
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'
    testImplementation group: 'org.springframework', name: 'spring-test', version: '6.2.8'

    // this is to use model().attribute() method
    testImplementation("org.hamcrest:hamcrest:3.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useTestNG()
}

tasks.register('deploy', Copy) {
    dependsOn 'war'

    from war.archiveFile
    into "C:\\apache-tomcat-10.1.24-windows-x64\\webapps"
}